accessible: true
author: Fitvoye Florian, Dubray Alexandre
context: |-
    Dans un exercice précédent, vous avez implémenter une fonction qui permet de vérifier si un ``String`` est un palyndrome. Cependant, il est possible qu'une sous-séquence d'un ``String`` soit un palyndrome.
    Dans cet exercice, vous allez devoir compléter le corps de la fonction ``findPalyndrome`` qui recherche des palyndromes parmis les sous-séquences d'un ``String``. Par exemple ``findPalyndrome("unkayakbeau")`` renverra ``true`` car le mot kayak est un palyndrome.
    Pour cet exercice, vous pouvez considérer que la fonction ``isPalyndrome`` que vous avez implémenter est disponible.
environment: java8scala
evaluate: best
groups: false
limits:
    output: '2'
    time: '30'
    memory: '100'
name: 'Mission 04 : Question 06 : Palyndrome caché'
network_grading: false
problems:
    q1:
        type: code
        header: |-
            Voici la signature de la fonction :

            .. code-block:: java

                /*
                 *@pré: -
                 *@post: Retourne true si str contient un palyndrome, false sinon
                 */
                public static boolean findPalyndrome(String str){
                /* Code à compléter */
                }
        language: java
        name: Question 1
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
