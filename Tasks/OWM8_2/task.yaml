accessible: true
author: Naitali Brandon
context: |-
    Les interfaces sont très utiles pour définir des comportements communs à un ensemble d'objets. Ici, nous allons les appliquer dans le jeu d'échecs. Les pions, les fous, les tours,etc... ont tous des actions en commun comme se déplacer, manger une pièce et être mangée. Ainsi, il vous est demandé dans cette tâche d'implémenter une classe PionStu (sans la signature, juste le "corps" de la classe), qui représente un pion. En guise de démarrage, nous vous offrons le constructeur et les 2 attributs:

    .. code-block:: java


            String couleur;
            String nom;
            public PionStu(String couleur){
                this.couleur=couleur;
                this.nom="pion";
            }



    Celle-ci implémenterait l'interface ChessPiece:

    .. code-block:: java

        public interface ChessPiece {
            public int seDeplacer();
            public int estMangee(Object mangeur);
            public int mangePiece(Object victime);
            public String couleurPiece();
            public String nomPiece();
        }

    Bien entendu, nous ne vous demandons pas de coder le jeu d'échecs. Voici un ensemble de méthodes que vous pourrez utiliser pour implémenter l'interface (Rappel: pour les méthodes statiques, l'appel sera de la forme: Classe.methStat() ) :

    .. code-block:: java

        public class ChessAPI {
            // Supposez que ces méthodes fonctionnent parfaitement
            // deplace le pion
            public static int deplacerPion(){
                // do something
            }
            // fait disparaitre la piece de l'échéquier
            public static int disparaitre(Object mangeur){
                // do something
            }
            // action de manger une autre piece par le pion
            public static int mangerPion(Object victime){
                // do something
            }
            //
            public static String nomPion(){
                return "pion";
            }
        }

    Pour faciliter la correction, nous vous demandons de déclarer votre classe en "static".
environment: java7
groups: false
limits:
    memory: '100'
    time: '30'
    output: '2'
name: 'Mission 8 : Exercice intermédiaire - Implémenter une interface'
network_grading: false
problems:
    q1:
        language: Java
        type: code
        name: Classe PionStu
        header: ''
weight: 1.0
